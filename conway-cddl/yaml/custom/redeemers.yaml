Redeemers:
  type: union
  variants:
    - tag: 0
      peek_type: "array"
      name: redeemers_array
      type: RedeemersArray
    - tag: 1
      peek_type: "map"
      name: redeemers_map
      type: RedeemersMap
  item: Redeemer
  extra_methods: |
    total_ex_units(): ExUnits {
      let mems = BigNum.zero(),
        steps = BigNum.zero();
      switch(this.variant.kind) {
        case 0: {
          for (let i = 0; i < this.variant.value.len(); i++) {
            const item = this.variant.value.get(i);
            mems = mems.checked_add(item.ex_units().mem());
            steps = steps.checked_add(item.ex_units().steps());
          }
          break;
        }
        case 1: {
          const keys = this.variant.value.keys();
          for (let i = 0; i < keys.len(); i++) {
            const item = this.variant.value.get(keys.get(i)) as RedeemersValue;
            mems = mems.checked_add(item.ex_units().mem());
            steps = steps.checked_add(item.ex_units().steps());
          }
          break;
        }
      }
      return ExUnits.new(mems, steps);
    }

RedeemersArray:
  type: array
  item: RedeemersArrayItem

RedeemersArrayItem:
  type: record
  export: false
  fields:
    - name: tag
      type: RedeemerTag
    - name: index
      type: BigNum
    - name: data
      type: PlutusData
    - name: ex_units
      type: ExUnits

RedeemersMap:
  type: map
  key: RedeemersKey
  value: RedeemersValue
  keys_method_type: RedeemersKeys

RedeemersKeys:
  type: array
  item: RedeemersKey

RedeemersKey:
  type: record
  export: false
  fields:
    - name: tag
      type: RedeemerTag
    - name: index
      type: BigNum

RedeemersValue:
  type: record
  export: false
  fields:
    - name: data
      type: PlutusData
    - name: ex_units
      type: ExUnits
